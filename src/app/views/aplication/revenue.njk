{% extends "layout.njk" %}

{% block head %}
  <title>Foodfy - Receitas</title>
{% endblock %}

 {% block header %}
    <header>
      <div class="menu">
        <div class="logo">
          <a href="/foodfy">
            <img src="/assets/logo.png" alt="Logo foodfy">
          </a>
        </div>
        <div class="links">
          <a href="/foodfy/sobre">Sobre</a>
          <a href="/foodfy/receitas">Receitas</a>
          <a href="/foodfy/chefs">Chefs</a>
        </div>
        <div class=filter>
          <form action="/foodfy/search" method="GET">
            <input type="text" name="filter" placeholder="Buscar receita" value="{{ filter }}">
            <button type="submit">Buscar</button>
          </form>
        </div>
      </div>
    </header>
  {% endblock %}

{% block content %}
  <div class="recipe-page">
    <div class="cards">
      {% for recipe in recipes %}
      <div class="card" id="{{recipe.id}}">
        <img src="{{recipe.image}}" alt="{{recipe.title}}">
        <div class="info-card">
          <span>{{recipe.title}}</span>
          <p>por {{recipe.chef_name}}</p>
        </div>
      </div>
      {% endfor %}
    </div>
      <div class="pagination"
        data-page={{pagination.page}}
        data-total={{pagination.total}}
      ></div>
  </div>

  <script>

    function paginate(selectedPage, totalPages) {
      let pages = [],
        oldPage;

      for (let currentPage = 1; currentPage <= totalPages; currentPage++) {

        const firstAndLastPage = currentPage == 1 || currentPage == totalPages;
        const pagesAfterSelectedPage = currentPage <= selectedPage + 2;
        const pagesBeforeSelectedPage = currentPage >= selectedPage - 2;

        if (firstAndLastPage || pagesBeforeSelectedPage && pagesAfterSelectedPage) {
          if (oldPage && currentPage - oldPage > 2) {
            pages.push("...")
          }

          if (oldPage && currentPage - oldPage == 2) {
            pages.push(oldPage + 1)
          }

          pages.push(currentPage);

          oldPage = currentPage;
        }
      }
      return pages;
    }

    function createPagination(pagination) {
      const filter = pagination.dataset.filter;
      const page = Number(pagination.dataset.page);
      const total = Number(pagination.dataset.total);
      const pages = paginate(page, total);

      let elements = "";

      for (let page of pages) {
        if(String(page).includes("...")) {
          elements += `<span>${page}</span>`
        } else {

            if(filter) {
              elements += `<a href="?page=${page}&filter={{filter}}">${page}</a>`
            } else {
              elements += `<a href="?page=${page}">${page}</a>`
            }
          } 
      }
      pagination.innerHTML = elements;
    }

    const pagination = document.querySelector('.pagination')

    if(pagination) {
      createPagination(pagination);
    }
  </script>

{% endblock %}